name: Ticket Created — Intake

"on":
  issues:
    types: [opened]

permissions:
  contents: read
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  gate:
    runs-on: ubuntu-latest
    outputs:
      is_feature: ${{ steps.check.outputs.is_feature }}
      author: ${{ steps.check.outputs.author }}
      reason: ${{ steps.check.outputs.reason }}
    steps:
      - name: (1) Inspect new issue & decide path
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            console.log("🧭 Step 1 — Determining whether this is a Feature ticket");
            const issue  = context.payload.issue;
            const labels = (issue.labels || []).map(l => l.name);
            const body   = issue.body || "";
            const author = issue.user?.login || "unknown";

            const byLabel  = labels.includes("type: feature");
            const byMarker = body.includes("📜 Feature/Enhancement Request 📜");
            const isFeature = byLabel || byMarker;

            const reason = isFeature
              ? `Feature detected (label=${byLabel}, marker=${byMarker})`
              : `Non-feature (label=${byLabel}, marker=${byMarker})`;

            console.log(`➡️ ${reason}; author=${author}`);
            core.setOutput("is_feature", isFeature ? "true" : "false");
            core.setOutput("author", author);
            core.setOutput("reason", reason);

      - name: (2) Run summary — gate decision
        uses: actions/github-script@v7
        with:
          script: |
            await core.summary
              .addHeading('✳️ Ticket Created — Gate Decision')
              .addTable([
                [{data:'Key', header:true}, {data:'Value', header:true}],
                ['is_feature', `${{ steps.check.outputs.is_feature }}`],
                ['reason', `${{ steps.check.outputs.reason }}`],
              ])
              .write()

  add-to-default-project:
    needs: gate
    uses: ./.github/workflows/add-to-default-project.yaml
    with:
      project-id: ${{ vars.PROJECT_V2_ID }}
    secrets:
      token: ${{ secrets.PROJECT_PAT }}

  validate-feature-type:
    needs: [gate, add-to-default-project]
    if: ${{ needs.gate.outputs.is_feature == 'true' }}
    uses: ./.github/workflows/feature-request-validation.yaml
    with:
      quiet: false
    secrets: inherit

  label-non-feature:
    needs: [gate, add-to-default-project]
    if: ${{ needs.gate.outputs.is_feature != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: (3) Label — add needs-triage (non-feature)
        uses: ./.github/workflows/manage-labels.yaml
        with:
          add: '["needs-triage"]'
      - name: (4) Log
        run: echo "🏷️ Non-feature ticket labeled with needs-triage"

  summarize:
    needs: [gate, add-to-default-project, validate-feature-type, label-non-feature]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: (5) Write run summary
        uses: actions/github-script@v7
        with:
          script: |
            await core.summary
              .addHeading('📊 Ticket Created — Intake Summary')
              .addTable([
                [{data:'Job', header:true}, {data:'Result', header:true}],
                ['gate',                      `${{ needs.gate.result }}`],
                ['add-to-default-project',    `${{ needs.add-to-default-project.result }}`],
                ['validate-feature-type',     `${{ needs.validate-feature-type.result }}`],
                ['label-non-feature',         `${{ needs.label-non-feature.result }}`],
              ])
              .write();
