name: Auto-Close PRs Unless Author Has Write Access

on:
  pull_request:
    types: [opened]

jobs:
  close-unapproved-prs:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      # Needed to read permissions of collaborators

    steps:
      - name: Check author permission and conditionally close
        uses: actions/github-script@v7
        with:
          script: |
            # Get information on the PR and it's author
            const { owner, repo } = context.repo; 
            const pr_author = context.payload.pull_request.user.login;
            const pr_number = context.payload.pull_request.number;

            # Call for the author's permissions within the repository
            const permission_response = await github.rest.repos.getCollaboratorPermissionLevel({
              owner,
              repo,
              username: pr_author
            });

            # Pull out the permissions and identify the approved permissions
            const permission = permission_response.data.permission;
            const approved_perms = ['admin', 'write', 'maintain'];

            # If the author doesn't have any of the approved permissions - leave a comment on the PR
            if (!approved_perms.includes(permission)) {
              await github.issues.createComment({
                issue_number: pr_number,
                owner,
                repo,
                body: `Howdy @${pr_author}, this repository does not accept pull requests from users without write access. Closing this PR.`
              });

              # Close the PR out after commenting on it
              await github.pulls.update({
                pull_number: pr_number,
                owner,
                repo,
                state: 'closed'
              });
            } else {
              # Log success state for later review of the action
              console.log(`User ${pr_author} has ${permission} permission. PR allowed.`);
            }
