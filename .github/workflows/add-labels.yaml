name: Add Labels

on:
  workflow_call:
    inputs:
      labels:
        description: "Comma-separated list of labels"
        required: true
        type: string

jobs:
  add-labels:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    permissions:
      issues: write
      pull-requests: write

    steps:
      - name: Get all the relevant information
        uses: actions/github-script@v7
        with:
          script: |
            const input = '${{ inputs.labels }}';
            const labelsToAdd = input.split(',').map(l => l.trim()).filter(Boolean);
            const { owner, repo } = context.repo;
            const issueNumber = context.issue.number;

      - name: Check if the issue/PR is valid
        uses: actions/github-script@v7
        with:
          script: |
            if (!issueNumber) {
              core.setFailed("üö® ERROR: No issue or pull request number found in context.");
              return;
            }

      - name: Request the labels from the repository
        uses: actions/github-script@v7
        with:
          script: |
            core.info(`‚ÑπÔ∏è INFO: Requested labels: ${labelsToAdd.join(', ')}`);

            let existingLabels = [];
            try {
              const res = await github.rest.issues.listLabelsForRepo({ owner, repo });
              existingLabels = res.data.map(label => label.name);
            } catch (error) {
              core.warning(`üö® ERROR: Could not fetch existing labels: ${error.message}`);
              throw error;
            }

      - name: Determine which labels are valid (if any) and add them
        uses: actions/github-script@v7
        with:
          script: |
            const validLabels = labelsToAdd.filter(label => existingLabels.includes(label));
            const invalidLabels = labelsToAdd.filter(label => !existingLabels.includes(label));

            if (validLabels.length === 0) {
              core.warning("üö® ERROR: None of the provided labels exist in the repo.");
            } else {
              try {
                await github.rest.issues.addLabels({
                  owner,
                  repo,
                  issue_number: issueNumber,
                  labels: validLabels,
                });
                core.info(`‚úÖ SUCCESS: Added labels: ${validLabels.join(', ')}`);
              } catch (error) {
                core.setFailed(`üö® ERROR: Failed to apply labels: ${error.message}`);
                return;
              }
            }

      - name: Document which labels were invalid
        uses: actions/github-script@v7
        with:
          script: |
            if (invalidLabels.length > 0) {
              core.warning(`‚ÑπÔ∏è INFO: These labels do not exist in the repo: ${invalidLabels.join(', ')}`);
            }
